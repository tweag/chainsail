syntax = "proto3";

package grpc.health.v1;

message LogProbRequest {
  bytes state_bytes = 1;
  int32 job_id = 2;
}

message LogProbResponse {
  float log_prob_result = 1;
}

message LogProbGradientRequest {
  bytes state_bytes = 1;
  int32 job_id = 2;
}

message LogProbGradientResponse {
  bytes gradient_bytes = 1;
}

message LogLikelihoodRequest {
  bytes state_bytes = 1;
  int32 job_id = 2;
}

message LogLikelihoodResponse {
  float log_likelihood_result = 1;
}

message LogLikelihoodGradientRequest {
  bytes state_bytes = 1;
  int32 job_id = 2;
}

message LogLikelihoodGradientResponse {
  bytes gradient_bytes = 1;
}

message LogPriorRequest {
  bytes state_bytes = 1;
  int32 job_id = 2;
}

message LogPriorResponse {
  float log_prior_result = 1;
}

message LogPriorGradientRequest {
  bytes state_bytes = 1;
  int32 job_id = 2;
}

message LogPriorGradientResponse {
  bytes gradient_bytes = 1;
}

message InitialStateRequest {
  int32 job_id = 1;
}

message InitialStateResponse {
  bytes initial_state_bytes = 1;
}

message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SUCCESS = 3;
    FAILED = 4;
  }
  ServingStatus status = 1;
}

service UserCode {
  rpc LogProb(LogProbRequest) returns (LogProbResponse);

  rpc LogProbGradient(LogProbGradientRequest) returns (LogProbGradientResponse);

  rpc LogLikelihood(LogLikelihoodRequest) returns (LogLikelihoodResponse);

  rpc LogLikelihoodGradient(LogLikelihoodGradientRequest) returns (LogLikelihoodGradientResponse);

  rpc LogPrior(LogPriorRequest) returns (LogPriorResponse);

  rpc LogPriorGradient(LogPriorGradientRequest) returns (LogPriorGradientResponse);

  rpc InitialState(InitialStateRequest) returns (InitialStateResponse);
}

service Health {
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);

  rpc Watch(HealthCheckRequest) returns (stream HealthCheckResponse);
}
